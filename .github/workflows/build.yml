# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Building on pull request

on:
  pull_request:
    branches: [ main ]

jobs:
  print-stuff:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - name: echo stuff
        run: echo "stuff"
  dumpcontext:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: amannn/action-semantic-pull-request@v3.1.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           subjectPattern: ^[A-Z]{2,5}-\d{1,6}.+$
#           subjectPatternError: |
#             The subject "{subject}" found in the pull request title "{title}"
#             didn't match the configured pattern. Please ensure that the subject
#             doesn't start with an uppercase character.
#           validateSingleCommit: true
  updatePullRequest:
    if: ${{ true }}
    runs-on: ubuntu-latest
#     needs: build
    steps:
      - name: print need variables
        env:
          PULL_REQ_NO: ${{ toJSON(github.event.number) }}
        run: echo "pull-req-no $PULL_REQ_NO |repo $GITHUB_REPOSITORY |branch ${GITHUB_HEAD_REF}| ${{ fromJson(github.event.number) }}"
      - uses: octokit/request-action@v2.x
        id: list_commits
        with:
          route: GET /repos/{repo}/pulls/{pull_number}/commits
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo steps output header: ${{ toJson(steps.list_commits.outputs.headers) }}"
      - run: "echo steps output data: ${{ toJson(steps.list_commits.outputs.data) }}"
      - run: "echo steps output sha: ${{ toJson(steps.list_commits.outputs.data)[0].sha }}"
      - name: Set version as env variable
        run: echo "VERSION=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> $GITHUB_ENV
      - uses: octokit/request-action@v2.x
        id: update_description
        with:
          route: PATCH /repos/{repo}/pulls/{pull_number}
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.number }}
          output: | # The | is significant!
            title: ${{env.VERSION}}| ${{ github.head_ref }} |${{ github.event.number }}|${{ github.event.pull_request.title }}
            body: "crappy"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo steps output header: ${{ toJson(steps.update_description.outputs.headers) }}"
      - run: "echo steps output data: ${{ toJson(steps.update_description.outputs.data) }}"
      
#   merge-me:
#    name: Merge me!
#    #needs: updatePullRequest
#    runs-on: ubuntu-latest
#    steps:
#      - name: Merge pull request to default branch
#        uses: ridedott/merge-me-action@v1
#        with:
#           # Depending on branch protection rules, a  manually populated
#           # `GITHUB_TOKEN_WORKAROUND` environment variable with permissions to
#           # push to a protected branch must be used. This variable can have an
#           # arbitrary name, as an example, this repository uses
#           # `GITHUB_TOKEN_DOTTBOTT`.
#           #
#           # When using a custom token, it is recommended to leave the following
#           # comment for other developers to be aware of the reasoning behind it:
#           #
#           # This must be used as GitHub Actions token does not support
#           # pushing to protected branches.
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}              
#       - run: "date > datetime.txt" # create or update a test.txt file
#       - name: Create or Update Pull Request
#         uses: gr2m/create-or-update-pull-request-action@v1.3.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           title: " randi sin pull request"
#           labels: testing
#           branch: "main"
