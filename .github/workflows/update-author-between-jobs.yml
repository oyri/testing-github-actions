name: Sende author to repo
on:
  repository_dispatch:
    types: [update-version]
env:
  IMAGE-NAME: ${{ github.event.client_payload.image-name }}
  MANUAL-DEPLOY: ${{ github.event.client_payload.manual-deploy }}
  AUTHOR-USERNAME: ${{ github.event.client_payload.author.username }}
  AUTHOR-NAME: ${{ github.event.client_payload.author.name }}
  AUTHOR-EMAIL: ${{ github.event.client_payload.author.email }}
  ACTOR: ${{ github.event.client_payload.actor }}
jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Set imagetag as env variable
        run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"
      - name: Set actor username
        if: ${{ env.AUTHOR-USERNAME=='' && env.ACTOR != '' }}
        run: echo "AUTHOR-USERNAME=${env.ACTOR}" >> "$GITHUB_ENV"
      - name: Set actor name
        if: ${{ env.AUTHOR-NAME=='' && env.ACTOR != ''}}
        run: echo "AUTHOR-USER=${env.ACTOR}" >> "$GITHUB_ENV"    
      - name: Set actor email
        if: ${{ env.AUTHOR-NAME=='' && env.ACTOR != ''}}
        run: echo "AUTHOR-EMAIL=${env.ACTOR}@users.noreply.github.com" >> "$GITHUB_ENV"          
      - id: echo-image-name
        run: echo imagename ${{env.IMAGE-NAME}}
      - id: echo-author-obj-actor
        run: echo "${{ github.event.client_payload.author }} and ${{ github.event.client_payload.author }}"
      - id: author-print
        run: echo "jira ${{ github.event.client_payload.jira-id }} name ${{ github.event.client_payload.author.name }} email ${{ github.event.client_payload.author.email }} username ${{ github.event.client_payload.author.username }}"
      - uses: actions/checkout@v3
      - id: add-file
        run: echo "hei ">>hei.txt
      - name: create pull request
        uses: peter-evans/create-pull-request@923ad837f191474af6b1721408744feb989a4c27 # pin@v4.0.3
        with:
          commit-message: "${{ env.JIRA-ID }}: updating version of ${{ env.IMAGE-NAME }}"
          branch: ${{ env.IMAGE-NAME }}-version-update
          delete-branch: true
          labels: update-version
          branch-suffix: random
          assignees: ${{ env.AUTHOR-USERNAME }}
          author: ${{ env.AUTHOR-NAME }} <${{ env.AUTHOR-EMAIL }}>
          committer: ${{ env.AUTHOR-NAME }} <${{ env.AUTHOR-EMAIL }}>
          title: "${{ env.JIRA-ID }}: updating version of ${{ env.IMAGE-NAME}} "
          body: "automated pull-request"
#      - name: merge-updated-version
#        id: automerge
#        if: ${{ env. MANUAL-DEPLOY == '' ||  env.MANUAL-DEPLOY == 'false' }}
#        uses: "pascalgn/automerge-action@v0.15.3"
#        env:
##          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#          MERGE_LABELS: "update-version"
#          MERGE_COMMIT_MESSAGE: "pull-request-title"
#          MERGE_METHOD: "squash"
#      - name: feedback
#        if: ${{steps.automerge.outputs.mergeResult == 'merged'}}
#        run: |
#          echo "Pull request ${{ steps.automerge.outputs.pullRequestNumber }} merged!"
