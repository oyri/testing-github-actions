# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Get jira-id from branch name

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
#  push:
#    branches:
#      - '**'      # matches every branch
#      - '!main'   # excludes main

jobs:
  findIssueId:
    runs-on: ubuntu-latest
    steps:
#      - name: print need variables
#        env:
#          PULL_REQ_NO: ${{ toJSON(github.event.number) }}
#        run: echo "pull-req-no $PULL_REQ_NO |repo $GITHUB_REPOSITORY |branch ${GITHUB_HEAD_REF}| ${{ fromJson(github.event.number) }}"
#      - uses: octokit/request-action@v2.x
#        id: list_commits
#        with:
#          route: GET /repos/{repo}/pulls/{pull_number}/commits
#          repo: ${{ github.repository }}
#          pull_number: ${{ github.event.number }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "branch ${{github.event.pull_request.head.ref}} -BASE_REF ${{ github.base_ref }} -REF ${GITHUB_REF} -REF-hash ${GITHUB_REF##*/} -REF-refs/heads ${GITHUB_REF#refs/heads/}"
#      - name: Extract branch name
#        shell: bash
#        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#        id: extract_branch
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{github.event.pull_request.head.ref}}
          regex: 'work\/([\w]+-[\d]+)?.*'
      - run: echo "Found jira id from branch ${{github.event.pull_request.head.ref}}. jira id is ${{ steps.regex-match.outputs.group1 }}"
      - uses: octokit/request-action@v2.x
        id: update_description
        with:
          route: PATCH /repos/{repo}/pulls/{pull_number}
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.number }}
          output: | # The | is significant!
            title: ${{ steps.regex-match.outputs.group1 }} |${{ github.event.number }}|${{ github.event.pull_request.title }}
            body: "Standard pull request title"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "Description data: ${{ steps.update_description.outputs.data }}"
      - name: "update_description failed. Request failed with status ${{ steps.update_description.outputs.status }}
        if: ${{ failure() }}
